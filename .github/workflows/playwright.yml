name: Playwright Tests

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of test to run'
        required: true
        default: 'smoke'
        type: choice
        options:
          - smoke
          - regression
          - manual
      browser:
        description: 'Browser to test on'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit

jobs:
  # Manual triggered tests
  manual-tests:
    name: Manual Tests
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'manual'
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Manual Tests
      run: npx playwright test --project=${{ matrix.browser }} --reporter=allure-playwright
      env:
        CI: true

    - name: Upload Allure Results
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-${{ matrix.browser }}
        path: allure-results/

  # Smoke tests - quick validation of critical functionality
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'smoke'
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Smoke Tests
      run: npm run test:smoke -- --project=${{ matrix.browser }} --reporter=allure-playwright
      env:
        CI: true

    - name: Upload Allure Results
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-${{ matrix.browser }}
        path: allure-results/

  # Regression tests - comprehensive test suite
  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'regression'
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Regression Tests
      run: npm run test:regression -- --project=${{ matrix.browser }} --reporter=allure-playwright
      env:
        CI: true

    - name: Upload Allure Results
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-${{ matrix.browser }}
        path: allure-results/

  # Code quality checks
  lint-and-format:
    name: Code Quality
    runs-on: ubuntu-latest
    if: always()

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Check Prettier formatting
      run: npx prettier --check .

  # Test results aggregation and reporting
  report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [smoke-tests, regression-tests, manual-tests]
    if: always() && (needs.smoke-tests.result != 'skipped' || needs.regression-tests.result != 'skipped' || needs.manual-tests.result != 'skipped')

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download Allure Results
      uses: actions/download-artifact@v4
      with:
        path: ./allure-results-raw

    - name: Merge Allure Results
      run: |
        mkdir -p allure-results
        find ./allure-results-raw -type f -name '*.json' -exec cp {} allure-results/ \;
        find ./allure-results-raw -type f -name '*.txt' -exec cp {} allure-results/ \;

    - name: Generate Allure Report
      run: npm run allure:generate

    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30

    - name: Deploy Allure Report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure-report
        publish_branch: gh-pages
        force_orphan: true

    - name: Add Allure Report Link to Summary
      run: echo "[View Allure Report on GitHub Pages](https://karmit2196.github.io/playwright-js/)" >> $GITHUB_STEP_SUMMARY 